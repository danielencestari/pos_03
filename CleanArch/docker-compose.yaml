version: '3.8'

services:
  # Banco de dados MySQL
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_USER: root
      MYSQL_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/migrations:/docker-entrypoint-initdb.d  # Auto-executa migrations
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Message broker RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Aplicação Go
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: orders-app
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    ports:
      - "8000:8000"   # REST API
      - "8080:8080"   # GraphQL
      - "50051:50051" # gRPC
    environment:
      # Sobrescrever configurações para Docker
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: root
      DB_PASSWORD: root
      DB_NAME: orders
      DB_DRIVER: mysql
      WEB_SERVER_PORT: 8000
      GRPC_SERVER_PORT: 50051
      GRAPHQL_SERVER_PORT: 8080
    volumes:
      - ./logs:/app/logs  # Para logs da aplicação

# Volumes nomeados para persistência de dados
volumes:
  mysql_data:
    driver: local
  rabbitmq_data:
    driver: local